name: "release"

on:
  workflow_dispatch:
    inputs:
      version:
        description: "The version of this pathfinder release. This will create a new tag (triggering docker action) and also set the package version."
        required: true
        type: string

jobs:
  release:
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Update pathfinder package version
        run: |
          sed -i -e 's/version = ".*"/version = "${{ github.event.inputs.version }}"/' crates/pathfinder/Cargo.toml
          git config --global user.email "not@real"
          git config --global user.name "Pathfinder release bot"
          git commit -a -m "feat: update package version to ${{ github.event.inputs.version }}"

      - name: Get new git hash
        id: hash
        run: echo "HASH=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT

      - name: Push commit to origin
        env:
          GH_TOKEN: ${{ secrets.RELEASE_2 }}
        run: | 
            gh api \
            --method POST \
            -H "Accept: application/vnd.github+json" \
            /repos/Mirko-von-Leipzig/release_tester/git/refs \
            -f ref='refs/heads/master' \
            -f sha='${{ steps.hash.outputs.HASH }}'

      - name: Create tag
        env:
          GH_TOKEN: ${{ secrets.RELEASE_2 }}
        run: |
          gh api \
            --method POST \
            -H "Accept: application/vnd.github+json" \
            /repos/Mirko-von-Leipzig/release_tester/git/refs \
            -f ref='refs/tags/v${{ github.event.inputs.version }}' \
            -f sha='${{ steps.hash.outputs.HASH }}'

      - name: Create release notes draft
        env:
          GH_TOKEN: ${{ secrets.RELEASE_2 }}
        run: |
          gh api \
            --method POST \
            -H "Accept: application/vnd.github+json" \
              /repos/Mirko-von-Leipzig/release_tester/releases \
            -f tag_name='v${{ github.event.inputs.version }}' \
            -f target_commitish='master' \
            -f name='v${{ github.event.inputs.version }}' \
            -f body='Description of the release' \
            -F draft=true \
            -F prerelease=false \
            -F generate_release_notes=true 