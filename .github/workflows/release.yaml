name: "release"

on:
  workflow_dispatch:
    inputs:
      version:
        description: "The version of this pathfinder release. This will create a new tag (triggering docker action) and also set the package version."
        required: true
        type: string

jobs:
  release:
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      - name: branch verification
        if: github.ref_name != 'master' || github.ref_type != 'branch'
        run: |
          echo "::error This action may only be run on 'master' branch"
          exit 1

      - uses: actions/checkout@v3

      - name: Update pathfinder package version
        run: |
          sed -i -e 's/version = ".*"/version = "${{ github.event.inputs.version }}"/' crates/pathfinder/Cargo.toml

      - name: Commit, tag and push
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          git config --local user.email "${{ github.actor }}@users.noreply.github.com"
          git config --local user.name "${{ github.actor }}"
          git switch -c release_branch
          git commit -a -m "feat: update package version to ${{ github.event.inputs.version }}"
          git push --set-upstream origin release_branch

          gh pr create --base master --fill


          # git tag v${{ github.event.inputs.version }}
          # git push --atomic origin master v${{ github.event.inputs.version }}

      - name: Approve PR
        env:
          GH_TOKEN: ${{ secrets.RELEASE_3 }}
        run: |
          gh pr review --approve
          gh pr merge --delete-branch --merge
            
      - name: Tag & release notes
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git switch master
          git pull
          git tag v${{ github.event.inputs.version }}
          git push origin v${{ github.event.inputs.version }}

          gh api \
            --method POST \
            -H "Accept: application/vnd.github+json" \
              /repos/Mirko-von-Leipzig/release_tester/releases \
            -f tag_name='v${{ github.event.inputs.version }}' \
            -f target_commitish='master' \
            -f name='v${{ github.event.inputs.version }}' \
            -f body='Description of the release' \
            -F draft=true \
            -F prerelease=false \
            -F generate_release_notes=true 

            