name: "release"

on:
  workflow_dispatch:
    inputs:
      version:
        description: "The version of this pathfinder release. This will create a new tag (triggering docker action) and also set the package version."
        required: true
        type: string

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Parse version input
        id: semver
        run: |
          major=$(echo '${{ github.event.inputs.version }}' | sed -E 's|v([0-9])+\.([0-9])+\.([0-9])+|\1|')
          minor=$(echo '${{ github.event.inputs.version }}' | sed -E 's|v([0-9])+\.([0-9])+\.([0-9])+|\2|')
          patch=$(echo '${{ github.event.inputs.version }}' | sed -E 's|v([0-9])+\.([0-9])+\.([0-9])+|\3|')

          echo $major
          echo $minor
          echo $patch

          exit 1

          # echo "HASH=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT

      - name: Update pathfinder package version
        run: |
          sed -i -e 's/version = ".*"/version = "${{ steps.semver_parser.outputs.fullversion }}"/' crates/pathfinder/Cargo.toml

      - name: Commit, tag and push
        run: |
          git config --local user.email "release[bot]@users.noreply.github.com"
          git config --local user.name "release[bot]"
          git commit -a -m "feat: update package version to ${{ steps.semver_parser.outputs.fullversion }}"
          git tag v${{ steps.semver_parser.outputs.fullversion }}
          git push --tags

      - name: Create release notes draft
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh api \
            --method POST \
            -H "Accept: application/vnd.github+json" \
              /repos/Mirko-von-Leipzig/release_tester/releases \
            -f tag_name='v${{ steps.semver_parser.outputs.fullversion }}' \
            -f target_commitish='master' \
            -f name='v${{ steps.semver_parser.outputs.fullversion }}' \
            -f body='Description of the release' \
            -F draft=true \
            -F prerelease=false \
            -F generate_release_notes=true 